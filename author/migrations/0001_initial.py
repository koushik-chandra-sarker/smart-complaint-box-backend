# Generated by Django 4.1.3 on 2023-08-13 13:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=200, unique=True, verbose_name='email')),
                ('email_verified', models.BooleanField(default=False)),
                ('username', models.CharField(max_length=200, unique=True, verbose_name='username')),
                ('salutation', models.CharField(choices=[('MR', 'Mr.'), ('MRS', 'Mrs.'), ('MISS', 'Miss'), ('MS', 'Ms.'), ('DR', 'Dr.'), ('PROF', 'Prof.'), ('REV', 'Rev.'), ('SIR', 'Sir'), ('MADAM', 'Madam'), ('BANGLA_MALE', 'জনাব'), ('BANGLA_FEMALE', 'বেগম'), ('BANGLA_SIR', 'স্যার'), ('BANGLA_MADAM', 'ম্যাডাম'), ('BANGLA_DR', 'ডঃ'), ('BANGLA_PROF', 'প্রফেসর'), ('BANGLA_BABU', 'বাবু'), ('BANGLA_BIBI', 'বিবি')], max_length=15)),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('office_address', models.CharField(help_text='Enter Your Office Address', max_length=250)),
                ('personal_address', models.CharField(help_text='Enter Your Personal Address', max_length=250)),
                ('office_phone_no', models.CharField(help_text='Enter Your Official Phone No', max_length=14)),
                ('office_phone_verified', models.BooleanField(default=False)),
                ('personal_phone_no', models.CharField(help_text='Enter Your Personal Phone No', max_length=14)),
                ('personal_phone_verified', models.BooleanField(default=False)),
                ('nid_no', models.CharField(help_text='Enter Your National Id Card Number.', max_length=250)),
                ('profile_pic', models.ImageField(default='profile-pic-default.jpg', upload_to='profile_picture')),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='MailInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('host', models.CharField(default='smtp.gmail.com', help_text='default host is "smtp.gmail.com". if you want to change it then give your host, otherwise leave it ', max_length=50)),
                ('port', models.IntegerField(default=587, help_text='default port is "587". if you want to change it then give your port no, otherwise leave it')),
                ('tls', models.BooleanField(default=False)),
                ('ssl', models.BooleanField(default=False)),
                ('mail', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(help_text='<p><b>For Gmail: You need to follow those steps:</b></p><br><p>1. Enable 2-Step Verification from your gmail account.</p> <br><p>2. Generate an App passwords from your gmail account and upload here. <a href-"https://myaccount.google.com/apppasswords">Click here to go google settings.</a></p> <br>', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.PositiveSmallIntegerField(choices=[(1, 'admin'), (2, 'moderator'), (3, 'general')], default=3, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='EmailConfirmed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activation_key', models.CharField(max_length=500)),
                ('email_confirm', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Email Confirm',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='designation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='author.designation'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='roles',
            field=models.ManyToManyField(blank=True, to='author.role'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
